# Load zprof first if we need to profile.
[[ ${ZPROFRC:-0} -eq 0 ]] || zmodload zsh/zprof
alias zprofrc="ZPROFRC=1 zsh"

# Lazy and autoload functions
for funcdir in $ZDOTDIR/functions $ZDOTDIR/functions/*(N/); do
  fpath=($funcdir $fpath)
  autoload -Uz $fpath[1]/*(.:t)
done
unset funcdir

## Options
setopt extended_glob
setopt interactive_comments

# Automaticly push directory path to the stack
setopt autocd
setopt autopushd
setopt pushd_ignore_dups
setopt pushdminus

ENABLE_CORRECTION=true
COMPLETION_WAITING_DOTS=true
ZSH_AUTOSUGGEST_MANUAL_REBIND=1

## Antidote Settings
zstyle ':antidote:bundle' use-friendly-names 'yes'

# Add completions to loading them
fpath=(
  $ZDOTDIR/completions(-/FN)
  $XDG_DATA_HOME/zsh/site-functions
  $fpath
)

# Set the name of the static .zsh plugins file antidote will generate.
zsh_plugins=$ZDOTDIR/.zsh_plugins.zsh

# Lazy-load antidote
fpath+=($ZDOTDIR/.antidote/functions)
autoload -Uz $fpath[-1]/antidote

# Generate static file in a subshell when .zsh_plugins.txt is updated.
if [[ ! $zsh_plugins -nt ${zsh_plugins:r}.txt ]]; then
  (antidote bundle <${zsh_plugins:r}.txt >|$zsh_plugins)
fi

## Load ASDF
if [[ -s "$ASDF_DIR/asdf.sh" ]]; then
  source $ASDF_DIR/asdf.sh
  source $ASDF_DIR/plugins/java/set-java-home.zsh
  source $ASDF_DIR/plugins/dotnet-core/set-dotnet-home.zsh
fi

# Run neofetch
hyfetch

# Instant Prompt
if [[ -r "$XDG_CACHE_HOME/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "$XDG_CACHE_HOME/p10k-instant-prompt-${(%):-%n}.zsh"
fi

## Set options before loading plugins that requires it
# Autopairs
typeset -gA AUTOPAIR_PAIRS
AUTOPAIR_PAIRS+=("<" ">")

source $zsh_plugins
